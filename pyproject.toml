[project]
name = "mindtrace"
version = "0.1.0"
description = "Mindtrace monorepo with modular packages"
requires-python = ">=3.12"
readme = "README.md"
dependencies = [
  "mindtrace-core>=0.1.0",
  "mindtrace-jobs>=0.1.0",
  "mindtrace-registry>=0.1.0",
  "mindtrace-database>=0.1.0",
  "mindtrace-services>=0.1.0",
  "mindtrace-hardware>=0.1.0",
  "mindtrace-cluster>=0.1.0",
  "mindtrace-models>=0.1.0",
  "mindtrace-automation>=0.1.0",
  "mindtrace-apps>=0.1.0",
  "mindtrace-ui>=0.1.0",
  "mindtrace-datalake>=0.1.0",
]

[tool.uv.sources]
mindtrace-core = { workspace = true }
mindtrace-services = { workspace = true }
mindtrace-apps = { workspace = true }
mindtrace-cluster = { workspace = true }
mindtrace-database = { workspace = true }
mindtrace-hardware = { workspace = true }
mindtrace-jobs = { workspace = true }
mindtrace-models = { workspace = true }
mindtrace-automation = { workspace = true }
mindtrace-registry = { workspace = true }
mindtrace-ui = { workspace = true }
mindtrace-datalake = { workspace = true }

[tool.uv.workspace]
members = [
  "mindtrace/core",
  "mindtrace/services",
  "mindtrace/apps",
  "mindtrace/cluster",
  "mindtrace/database",
  "mindtrace/hardware",
  "mindtrace/jobs",
  "mindtrace/models",
  "mindtrace/automation",
  "mindtrace/registry",
  "mindtrace/ui",
  "mindtrace/datalake",
]

[project.optional-dependencies]
test = [
  "pytest>=8.2.0",
  "pytest-cov>=5.0.0",
  "fastapi>=0.115.0",
  "httpx>=0.27.2"
]

[tool.pytest.ini_options]
addopts = "--cov=mindtrace --cov-report=term --cov-report=html"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = [
    "mindtrace/core/mindtrace/core",
    "mindtrace/services/mindtrace/services",
    "mindtrace/apps/mindtrace/apps",
    "mindtrace/cluster/mindtrace/cluster",
    "mindtrace/database/mindtrace/database",
    "mindtrace/hardware/mindtrace/hardware",
    "mindtrace/jobs/mindtrace/jobs",
    "mindtrace/models/mindtrace/models",
    "mindtrace/automation/mindtrace/automation",
    "mindtrace/registry/mindtrace/registry",
    "mindtrace/ui/mindtrace/ui",
    "mindtrace/datalake/mindtrace/datalake"
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]

[tool.coverage.html]
directory = "htmlcov"
